{
  "segmentName": "client",
  "controllers": {
    "ClientController": {
      "_controllerName": "ClientController",
      "_prefix": "client",
      "_handlers": {
        "getHelloWorldResponseObject": {
          "httpMethod": "GET",
          "path": "get-hello-world-response-object"
        },
        "getHelloWorldObjectLiteral": {
          "httpMethod": "GET",
          "path": "get-hello-world-object-literal"
        },
        "getHelloWorldNextResponseObjectPromise": {
          "httpMethod": "GET",
          "path": "get-hello-world-next-response-object-promise"
        },
        "getHelloWorldRawResponseObjectPromise": {
          "httpMethod": "GET",
          "path": "get-hello-world-raw-response-object-promise"
        },
        "getHelloWorldObjectLiteralPromise": {
          "httpMethod": "GET",
          "path": "get-hello-world-object-literal-promise"
        },
        "getHelloWorldHeaders": {
          "httpMethod": "GET",
          "path": "get-hello-world-headers"
        },
        "getHelloWorldArray": {
          "httpMethod": "GET",
          "path": "get-hello-world-array"
        },
        "getHelloWorldAndEmptyGeneric": {
          "httpMethod": "GET",
          "path": "get-hello-world-and-empty-generic"
        },
        "getWithParams": {
          "path": "with-params/:hello",
          "httpMethod": "GET"
        },
        "postWithAll": {
          "path": "with-all/:hello",
          "httpMethod": "POST"
        },
        "postWithBodyAndQueryUsingReqVovk": {
          "path": "with-all-using-req-vovk",
          "httpMethod": "POST"
        }
      }
    },
    "StreamingController": {
      "_controllerName": "StreamingController",
      "_prefix": "streaming",
      "_handlers": {
        "postWithStreaming": {
          "httpMethod": "POST",
          "path": "post-with-streaming"
        },
        "postWithStreamingAndImmediateError": {
          "httpMethod": "POST",
          "path": "post-with-streaming-and-immediate-error"
        },
        "postWithStreamingAndDelayedError": {
          "httpMethod": "POST",
          "path": "post-with-streaming-and-delayed-error"
        },
        "postWithStreamingAndDelayedCustomError": {
          "httpMethod": "POST",
          "path": "post-with-streaming-and-delayed-custom-error"
        },
        "postWithStreamingAndDelayedUnhandledError": {
          "httpMethod": "POST",
          "path": "post-with-streaming-and-delayed-unhandled-error"
        }
      }
    },
    "StreamingGeneratorController": {
      "_controllerName": "StreamingGeneratorController",
      "_prefix": "streaming-generator",
      "_handlers": {
        "postWithAsyncStreaming": {
          "httpMethod": "POST",
          "path": "post-with-async-streaming"
        },
        "postWithStreaming": {
          "httpMethod": "POST",
          "path": "post-with-streaming"
        },
        "postWithStreamingAndImmediateError": {
          "httpMethod": "POST",
          "path": "post-with-streaming-and-immediate-error"
        },
        "postWithStreamingAndDelayedError": {
          "httpMethod": "POST",
          "path": "post-with-streaming-and-delayed-error"
        },
        "postWithStreamingAndDelayedCustomError": {
          "httpMethod": "POST",
          "path": "post-with-streaming-and-delayed-custom-error"
        },
        "postWithStreamingAndDelayedUnhandledError": {
          "httpMethod": "POST",
          "path": "post-with-streaming-and-delayed-unhandled-error"
        }
      }
    },
    "CostomMetadataController": {
      "_controllerName": "CostomMetadataController",
      "_prefix": "",
      "_handlers": {
        "getWithCustomMetadata": {
          "customMetadata": {
            "hello": "world"
          },
          "httpMethod": "GET",
          "path": "get-with-custom-metadata"
        }
      }
    },
    "WithZodClientController": {
      "_controllerName": "WithZodClientController",
      "_prefix": "with-zod",
      "_handlers": {
        "postWithBodyAndQuery": {
          "httpMethod": "POST",
          "path": "post-with-body-and-query",
          "clientValidators": {
            "body": {
              "type": "object",
              "properties": {
                "hello": {
                  "type": "string",
                  "const": "body"
                }
              },
              "required": [
                "hello"
              ],
              "additionalProperties": false,
              "$schema": "http://json-schema.org/draft-07/schema#"
            },
            "query": {
              "type": "object",
              "properties": {
                "hey": {
                  "type": "string",
                  "const": "query"
                }
              },
              "required": [
                "hey"
              ],
              "additionalProperties": false,
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          }
        },
        "putWithBodyAndNullQuery": {
          "httpMethod": "PUT",
          "path": "put-with-body-and-null-query",
          "clientValidators": {
            "body": {
              "type": "object",
              "properties": {
                "hello": {
                  "type": "string",
                  "const": "body"
                }
              },
              "required": [
                "hello"
              ],
              "additionalProperties": false,
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          }
        },
        "putWithBodyOnly": {
          "httpMethod": "DELETE",
          "path": "put-with-body-only",
          "clientValidators": {
            "body": {
              "type": "object",
              "properties": {
                "hello": {
                  "type": "string",
                  "const": "body"
                }
              },
              "required": [
                "hello"
              ],
              "additionalProperties": false,
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          }
        },
        "getWithQueryAndNullBody": {
          "httpMethod": "GET",
          "path": "get-with-query-and-null-body",
          "clientValidators": {
            "query": {
              "type": "object",
              "properties": {
                "hey": {
                  "type": "string",
                  "const": "query"
                }
              },
              "required": [
                "hey"
              ],
              "additionalProperties": false,
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          }
        }
      }
    },
    "WithYupClientController": {
      "_controllerName": "WithYupClientController",
      "_prefix": "with-yup",
      "_handlers": {
        "postWithBodyAndQuery": {
          "httpMethod": "POST",
          "path": "post-with-body-and-query",
          "clientValidators": {
            "body": {
              "type": "object",
              "default": {},
              "properties": {
                "hello": {
                  "type": "string",
                  "enum": [
                    "body"
                  ]
                }
              },
              "required": [
                "hello"
              ]
            },
            "query": {
              "type": "object",
              "default": {},
              "properties": {
                "hey": {
                  "type": "string",
                  "enum": [
                    "query"
                  ]
                }
              },
              "required": [
                "hey"
              ]
            }
          }
        },
        "putWithBodyAndNullQuery": {
          "httpMethod": "PUT",
          "path": "put-with-body-and-null-query",
          "clientValidators": {
            "body": {
              "type": "object",
              "default": {},
              "properties": {
                "hello": {
                  "type": "string",
                  "enum": [
                    "body"
                  ]
                }
              },
              "required": [
                "hello"
              ]
            }
          }
        },
        "putWithBodyOnly": {
          "httpMethod": "DELETE",
          "path": "put-with-body-only",
          "clientValidators": {
            "body": {
              "type": "object",
              "default": {},
              "properties": {
                "hello": {
                  "type": "string",
                  "enum": [
                    "body"
                  ]
                }
              },
              "required": [
                "hello"
              ]
            }
          }
        },
        "getWithQueryAndNullBody": {
          "httpMethod": "GET",
          "path": "get-with-query-and-null-body",
          "clientValidators": {
            "query": {
              "type": "object",
              "default": {},
              "properties": {
                "hey": {
                  "type": "string",
                  "enum": [
                    "query"
                  ]
                }
              },
              "required": [
                "hey"
              ]
            }
          }
        }
      }
    },
    "WithDtoClientController": {
      "_controllerName": "WithDtoClientController",
      "_prefix": "with-dto",
      "_handlers": {
        "postWithBodyQueryAndParams": {
          "path": "with-params/:param",
          "httpMethod": "POST",
          "clientValidators": {
            "body": {
              "isDTO": true
            },
            "query": {
              "isDTO": true
            }
          }
        },
        "postWithBodyAndQueryTransformed": {
          "httpMethod": "POST",
          "path": "post-with-body-and-query-transformed",
          "clientValidators": {
            "body": {
              "isDTO": true
            },
            "query": {
              "isDTO": true
            }
          }
        },
        "putWithBodyAndNullQuery": {
          "httpMethod": "PUT",
          "path": "put-with-body-and-null-query",
          "clientValidators": {
            "body": {
              "isDTO": true
            },
            "query": null
          }
        },
        "putWithBodyOnly": {
          "httpMethod": "DELETE",
          "path": "put-with-body-only",
          "clientValidators": {
            "body": {
              "isDTO": true
            },
            "query": null
          }
        },
        "getWithQueryAndNullBody": {
          "httpMethod": "GET",
          "path": "get-with-query-and-null-body",
          "clientValidators": {
            "body": null,
            "query": {
              "isDTO": true
            }
          }
        },
        "postWithBodyAndQueryWithReqVovk": {
          "httpMethod": "POST",
          "path": "post-with-body-and-query-with-req-vovk",
          "clientValidators": {
            "body": {
              "isDTO": true
            },
            "query": {
              "isDTO": true
            }
          }
        },
        "getWithQueryArrayAndNullBody": {
          "httpMethod": "GET",
          "path": "get-with-query-array-and-null-body",
          "clientValidators": {
            "body": null,
            "query": {
              "isDTO": true
            }
          }
        }
      }
    }
  },
  "workers": {}
}