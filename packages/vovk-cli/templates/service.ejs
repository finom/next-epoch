<% var modulePascalName = _.upperFirst(_.camelCase(moduleName)); %>
<% var modulePascalNamePlural = pluralize(modulePascalName); %>
<% var serviceName = modulePascalName + 'Service'; %>
<% var controllerName = modulePascalName + 'Controller'; %>
---
dirName: <%= getModuleDirName(segmentName, moduleName) %>
fileName: <%= serviceName + '.ts' %>
---

import type { VovkControllerBody, VovkControllerQuery } from 'vovk';
import type <%= controllerName %> from './<%= controllerName %>';

export default class <%= serviceName %> {
  static get<%= modulePascalNamePlural %> = (search: VovkControllerQuery<typeof <%= controllerName %>.get<%= modulePascalNamePlural %>>['search']) => {
    return { results: [], search };
  };

  static update<%= modulePascalName %> = (
    id: string,
    q: VovkControllerQuery<typeof <%= controllerName %>.update<%= modulePascalName %>>['q'],
    body: VovkControllerBody<typeof <%= controllerName %>.update<%= modulePascalName %>>
  ) => {
    return { id, q, body };
  };

  // ...
}
